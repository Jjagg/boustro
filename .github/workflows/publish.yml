name: Publish

on:
  workflow_run:
    workflows: ["Build"]
    branches: [main]
    types: [completed]

env:
  channel: dev

jobs:
  publish:
    if: github.event.workflow_run.conclusion == 'success'

    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - packages/flutter_spanned_controller

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{env.channel}}

      - name: Extract version
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        id: pubspec
        with:
          file: packages/flutter_spanned_controller/pubspec.yaml
          name: name
          version: version

      - name: Fetch remote version
        run: |
          echo "CURRENT_VERSION=`flutter pub global activate ${{steps.pubspec.outputs.name}} | tail -n 1 | perl -ne '/Activated .* (.*)\./ && print $1'`" >> $GITHUB_ENV

      - name: Info
        run: |
          echo Upgrading ${{steps.pubspec.outputs.name}} v${{env.CURRENT_VERSION}} -> v${{steps.pubspec.outputs.version}}

      - name: Publish dry run
        run: flutter pub publish --dry-run
        working-directory: ${{ matrix.package }}
        if: steps.pubspec.outputs.version != env.CURRENT_VERSION

      - name: Set Credentials
        run: |
          mkdir -p $FLUTTER_HOME/.pub-cache
          echo '${{secrets.PUB_CREDENTIALS}}' > $FLUTTER_HOME/.pub-cache/credentials.json
        if: steps.pubspec.outputs.version != env.CURRENT_VERSION

      # Publish to pub.dev
      - name: Publish
        run: flutter pub publish -f
        working-directory: ${{ matrix.package }}
        if: steps.pubspec.outputs.version != env.CURRENT_VERSION

      # Create a tag
      - name: Create release tag
        uses: octokit/graphql-action@v2.2.1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          query: |
            mutation createTag($name:String!,$sha:String!) {
              createRef(input: {
              repositoryId: "MDEwOlJlcG9zaXRvcnkzMTU5Njk0ODE="
              name: $name
              oid: $sha
            }) {
              ref {
                id
              }
            }}
          name: ${{format('refs/tags/release_fsp_v{0}', steps.pubspec.outputs.version)}}
          sha: ${{github.sha}}
        if: steps.pubspec.outputs.version != env.CURRENT_VERSION
